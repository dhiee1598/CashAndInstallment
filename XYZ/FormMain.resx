<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>